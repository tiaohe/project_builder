name: Rust CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check-macros-fmt:
    name: Check Macro Libraries Formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: [builder_macro, aspect_macro]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
          components: rustfmt
      - name: Check Macro Library Formatting
        run: cargo fmt --manifest-path ${{ matrix.dir }}/Cargo.toml --all -- --check
        working-directory: ./

#  check-project-fmt:
#    name: Check Project Formatting
#    runs-on: ubuntu-latest
#    needs: check-macros-fmt
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Rust
#        uses: hecrj/setup-rust-action@v1
#        with:
#          rust-version: stable
#          components: rustfmt
#      - name: Check Project Formatting
#        run: cargo fmt --all -- --check
#        working-directory: ./project

  build-project:
    name: Build and Test Project
    runs-on: ubuntu-latest
    needs: check-project-fmt
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry  
            ~/.cargo/git  
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build Project
        run: cargo build
        working-directory: ./project
      - name: Run Tests
        run: cargo test
        working-directory: ./project