name: Rust CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check-macros-fmt:
    name: Check Macro Libraries Formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ['builder_macro', 'aspect_macro']
    steps:
      - uses: actions/checkout@v3
      - name: Setup Nightly Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt
      - name: Check Macro Formatting
        run: |
          cd ${{ matrix.dir }}
          cargo fmt --all -- --check
        env:
          RUSTFMT_UNSTABLE: 1

  check-project-fmt:
    name: Check Project Formatting
    runs-on: ubuntu-latest
    needs: check-macros-fmt
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt
      - name: Check Project Format
        run: cargo fmt --all -- --check
        working-directory: ./project
        env:
          RUSTFMT_UNSTABLE: 1

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: check-project-fmt
    strategy:
      matrix:
        project: ['project', 'builder_macro', 'aspect_macro']
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build Project
        run: cargo build --verbose
        working-directory: ./${{ matrix.project }}
      - name: Run Tests
        run: cargo test --verbose
        working-directory: ./${{ matrix.project }}